{"version":3,"sources":["styledComponets/CoinDetail.styled.tsx","styledComponets/Coins.styled.tsx","styledComponets/Loading.styled.tsx","loading-img.png","routes/CoinDetail.tsx","routes/Coins.tsx","routes/Routers.tsx","App.tsx","styledComponets/index.styled.tsx","index.tsx","theme.ts"],"names":["BodyWrapper","styled","article","Overview","section","OverviewItem","div","Wrapper","Header","header","Title","h1","props","theme","titleColor","CoinList","ul","Coin","li","textColor","bgColor","Img","img","LoadingImage","LoadingWrapper","CoinDetail","useState","coinInfo","setCoinInfo","coinPrice","setCoinPrice","loading","setLoading","state","useLocation","id","useParams","useEffect","a","fetch","coinId","json","loadedCoinInfo","loadedPriceInfo","coinName","name","src","loadingImg","rank","symbol","is_active","description","total_supply","max_supply","memo","Coins","coins","setCoins","data","slice","console","log","map","coin","index","to","pathname","coinSymbol","coinRank","toLowerCase","Routers","basename","process","exact","path","App","spinLogo","keyframes","GlobalStyled","createGlobalStyle","ReactDOM","render","StrictMode","borderRadius","document","getElementById"],"mappings":"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","file":"static/js/main.5bd0da6f.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const BodyWrapper = styled.article`\r\n\r\n`\r\n\r\nexport const Overview = styled.section`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: rgba(0,0,0,0.3);\r\n    border-radius: 8px;\r\n    padding: 10px 20px;\r\n    line-height: 150%;\r\n    \r\n    &:not(:last-child) {\r\n        margin-bottom: 15px;\r\n    }\r\n`\r\n\r\nexport const OverviewItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    span:first-child {\r\n        text-transform: uppercase;\r\n        font-size: 14px;\r\n        margin-bottom: 3px;\r\n        color:#5394e9cc\r\n    }\r\n`","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.article`\r\n    margin: 0 auto;\r\n    max-width: 480px;\r\n`\r\nexport const Header = styled.header`\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nexport const Title = styled.h1`\r\n    color: ${(props) => props.theme.titleColor};\r\n`\r\nexport const CoinList = styled.ul``;\r\nexport const Coin = styled.li`\r\n    background-color: ${(props) => props.theme.textColor};\r\n    color: ${(props) => props.theme.bgColor};\r\n    margin-bottom: 10px;\r\n    border-radius: 8px;\r\n\r\n    a {\r\n        display: block;\r\n        padding: 10px 20px;\r\n        transition: color 2s cubic-bezier(0.075, 0.82, 0.165, 1), text-shadow 0.5s ease-in;\r\n\r\n        &:hover {\r\n            color: #3293e7;\r\n            text-shadow: 1px 0px 3px #0362b6;\r\n        }\r\n    }\r\n`\r\nexport const Img = styled.img`\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 10px;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const LoadingImage = styled.img`\r\n    background-color: white;\r\n    border-radius: 100%;\r\n`\r\n\r\nexport const LoadingWrapper = styled.section`\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","export default __webpack_public_path__ + \"static/media/loading-img.db9c4721.png\";","import { memo, useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router\";\r\nimport { CoinInfo, CoinPrice, CoinRouteParams, CoinRouteState } from \"../interfaces/CoinDetail.interface\";\r\nimport { BodyWrapper, Overview, OverviewItem } from \"../styledComponets/CoinDetail.styled\";\r\nimport { Header, Title, Wrapper } from \"../styledComponets/Coins.styled\";\r\nimport { LoadingImage, LoadingWrapper } from \"../styledComponets/Loading.styled\";\r\nimport loadingImg from \"../loading-img.png\";\r\n\r\nfunction CoinDetail() {\r\n    const [coinInfo, setCoinInfo] = useState<CoinInfo>();\r\n    const [coinPrice, setCoinPrice] = useState<CoinPrice>();\r\n    const [loading, setLoading] = useState(true);\r\n    const {state} = useLocation<CoinRouteState>();\r\n    const {id} = useParams<CoinRouteParams>();\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            const loadedCoinInfo = await (await fetch(`https://api.coinpaprika.com/v1/coins/${state?.coinId ?? id}`)).json();\r\n            setCoinInfo(loadedCoinInfo);\r\n            \r\n            const loadedPriceInfo = await (await fetch(`https://api.coinpaprika.com/v1/tickers/${state?.coinId ?? id}`)).json();\r\n            setCoinPrice(loadedPriceInfo);\r\n            setLoading(false);\r\n        })()\r\n    },[coinInfo, coinPrice, id, state?.coinId])\r\n\r\n    function renderCoinInfo() {\r\n        return (\r\n            <BodyWrapper>\r\n                <Overview>\r\n                    <OverviewItem>\r\n                        <span>rank</span>\r\n                        <span>{coinInfo?.rank}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>symbol</span>\r\n                        <span>{coinInfo?.symbol}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>active</span>\r\n                        <span>{`${coinInfo?.is_active}`}</span>\r\n                    </OverviewItem>\r\n                </Overview>\r\n                <Overview>\r\n                    {coinInfo?.description}\r\n                </Overview>\r\n                <Overview>\r\n                <OverviewItem>\r\n                        <span>total supply</span>\r\n                        <span>{coinPrice?.total_supply}</span>\r\n                    </OverviewItem>\r\n                    <OverviewItem>\r\n                        <span>max supply</span>\r\n                        <span>{coinPrice?.max_supply}</span>\r\n                    </OverviewItem>\r\n                </Overview>\r\n            </BodyWrapper>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Header>\r\n                <Title>{state?.coinName ?? (loading ? \"Loading...\" : coinInfo?.name)}</Title>\r\n            </Header>\r\n                {loading ? <LoadingWrapper><LoadingImage src={loadingImg}/></LoadingWrapper> : renderCoinInfo()}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default memo(CoinDetail);","import { memo, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CoinInterface } from \"../interfaces/Coins.interface\";\r\nimport { Coin, CoinList, Header, Title, Wrapper, Img } from \"../styledComponets/Coins.styled\";\r\nimport { LoadingImage, LoadingWrapper } from \"../styledComponets/Loading.styled\";\r\nimport loadingImg from \"../loading-img.png\"\r\n\r\nfunction Coins () {\r\n    const [coins, setCoins] = useState<CoinInterface[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            const data:CoinInterface[] = await (await fetch('https://api.coinpaprika.com/v1/coins')).json();\r\n            setCoins(data.slice(0,150));\r\n            setLoading(false);\r\n            console.log(coins)\r\n        })()\r\n    },[coins])\r\n\r\n    const renderCoins = () => coins.map((coin,index) => \r\n        <Coin key={coin.id}>\r\n            <Link to={{\r\n                    pathname:`/${coin.id}`,\r\n                    state:{\r\n                        coinId:coin.id,\r\n                        coinSymbol:coin.symbol,\r\n                        coinName:coin.name,\r\n                        coinRank:coin.rank\r\n                    }\r\n                }}>\r\n                <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />{coin.name}\r\n            </Link>\r\n        </Coin>)\r\n    return (\r\n        <Wrapper>\r\n            <Header>\r\n                <Title>코인 살펴보기</Title>\r\n            </Header>\r\n            {loading ? (<LoadingWrapper><LoadingImage src={loadingImg}/></LoadingWrapper>) : (\r\n            <CoinList>\r\n                {renderCoins()}   \r\n                </CoinList>\r\n                )\r\n            }\r\n            \r\n        </Wrapper>\r\n    )\r\n}\r\n \r\nexport default memo(Coins);","import {BrowserRouter, Switch, Route} from \"react-router-dom\"\r\nimport CoinDetail from \"./CoinDetail\";\r\nimport Coins from \"./Coins\";\r\n\r\nfunction Routers() {\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route exact path=\"/:id\">\r\n                    <CoinDetail />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                    <Coins />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )    \r\n}\r\n\r\nexport default Routers;","import Routers from \"./routes/Routers\";\n\nfunction App() {\n  return <Routers />;\n}\n\nexport default App;\n","import { createGlobalStyle, keyframes } from \"styled-components\";\r\nimport { LoadingImage } from \"./Loading.styled\";\r\n\r\nconst spinLogo = keyframes`\r\n    0%{\r\n        transform: rotate(0deg);\r\n        border-radius:100%;\r\n    }\r\n    50%{\r\n        transform: rotate(180deg);\r\n        border-radius:75%;\r\n    }\r\n    100%{\r\n        transform: rotate(360deg)\r\n        border-radius:100%;\r\n    }\r\n`\r\n\r\nexport const GlobalStyled = createGlobalStyle`\r\n  html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n\r\n:focus {\r\n    outline: 0;\r\n}\r\n\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\n\r\nbody {\r\n\tline-height: 1;\r\n}\r\n\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\n\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\n\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\n\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\ninput[type=search]::-webkit-search-cancel-button,\r\ninput[type=search]::-webkit-search-decoration,\r\ninput[type=search]::-webkit-search-results-button,\r\ninput[type=search]::-webkit-search-results-decoration {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n}\r\n\r\ninput[type=search] {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    -webkit-box-sizing: content-box;\r\n    -moz-box-sizing: content-box;\r\n    box-sizing: content-box;\r\n}\r\n\r\ntextarea {\r\n    overflow: auto;\r\n    vertical-align: top;\r\n    resize: vertical;\r\n}\r\n\r\n\r\naudio,\r\ncanvas,\r\nvideo {\r\n    display: inline-block;\r\n    *display: inline;\r\n    *zoom: 1;\r\n    max-width: 100%;\r\n}\r\n\r\n\r\naudio:not([controls]) {\r\n    display: none;\r\n    height: 0;\r\n}\r\n\r\n[hidden] {\r\n    display: none;\r\n}\r\n\r\nhtml {\r\n    font-size: 100%; /* 1 */\r\n    -webkit-text-size-adjust: 100%; /* 2 */\r\n    -ms-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    color:inherit;\r\n}\r\n\r\na:focus {\r\n    outline: thin dotted;\r\n}\r\n\r\na:active,\r\na:hover {\r\n    outline: 0;\r\n}\r\n\r\nimg {\r\n    border: 0; /* 1 */\r\n    -ms-interpolation-mode: bicubic; /* 2 */\r\n}\r\n\r\nfigure {\r\n    margin: 0;\r\n}\r\n\r\nform {\r\n    margin: 0;\r\n}\r\n\r\nfieldset {\r\n    border: 1px solid #c0c0c0;\r\n    margin: 0 2px;\r\n    padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\nlegend {\r\n    border: 0; /* 1 */\r\n    padding: 0;\r\n    white-space: normal; /* 2 */\r\n    *margin-left: -7px; /* 3 */\r\n}\r\n\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n    font-size: 100%; /* 1 */\r\n    margin: 0; /* 2 */\r\n    vertical-align: baseline; /* 3 */\r\n    *vertical-align: middle; /* 3 */\r\n}\r\n\r\nbutton,\r\ninput {\r\n    line-height: normal;\r\n}\r\n\r\nbutton,\r\nselect {\r\n    text-transform: none;\r\n}\r\n\r\nbutton,\r\nhtml input[type=\"button\"], /* 1 */\r\ninput[type=\"reset\"],\r\ninput[type=\"submit\"] {\r\n    -webkit-appearance: button; /* 2 */\r\n    cursor: pointer; /* 3 */\r\n    *overflow: visible;  /* 4 */\r\n}\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n    cursor: default;\r\n}\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n    box-sizing: border-box; /* 1 */\r\n    padding: 0; /* 2 */\r\n    *height: 13px; /* 3 */\r\n    *width: 13px; /* 3 */\r\n}\r\n\r\ninput[type=\"search\"] {\r\n    -webkit-appearance: textfield; /* 1 */\r\n    -moz-box-sizing: content-box;\r\n    -webkit-box-sizing: content-box; /* 2 */\r\n    box-sizing: content-box;\r\n}\r\n\r\ninput[type=\"search\"]::-webkit-search-cancel-button,\r\ninput[type=\"search\"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n}\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n    border: 0;\r\n    padding: 0;\r\n}\r\n\r\ntextarea {\r\n    overflow: auto; /* 1 */\r\n    vertical-align: top; /* 2 */\r\n}\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\nhtml,\r\nbutton,\r\ninput,\r\nselect,\r\ntextarea {\r\n    color: #222;\r\n}\r\n\r\n\r\n::-moz-selection {\r\n    background: #b3d4fc;\r\n    text-shadow: none;\r\n}\r\n\r\n::selection {\r\n    background: #b3d4fc;\r\n    text-shadow: none;\r\n}\r\n\r\nimg {\r\n    vertical-align: middle;\r\n}\r\n\r\nfieldset {\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\ntextarea {\r\n    resize: vertical;\r\n}\r\n\r\n.chromeframe {\r\n    margin: 0.2em 0;\r\n    background: #ccc;\r\n    color: #000;\r\n    padding: 0.2em 0;\r\n}\r\n\r\nbody {\r\n    background-color: ${(props) => props.theme.bgColor};\r\n    color: ${(props) => props.theme.textColor};\r\n}\r\n\r\n@media(prefers-reduced-motion: no-preference) {\r\n    ${LoadingImage} {\r\n        animation: ${spinLogo} infinite 20s linear;\r\n    }        \r\n}    \r\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from \"styled-components\"\nimport { BasicTheme } from './theme';\nimport { GlobalStyled } from './styledComponets/index.styled';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={BasicTheme}>\n      <GlobalStyled />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const DarkTheme: DefaultTheme = {\r\n  bgColor: \"black\",\r\n  borderRadius: \"10%\",\r\n  textColor: \"white\",\r\n  titleColor: \"#f39d3b\",\r\n};\r\n\r\nexport const LightTheme: DefaultTheme = {\r\n  bgColor: \"white\",\r\n  borderRadius: \"10%\",\r\n  textColor: \"black\",\r\n  titleColor: \"#f39d3b\",\r\n};\r\n\r\nexport const BasicTheme: DefaultTheme = {\r\n  bgColor: \"#414141\",\r\n  borderRadius: \"10%\",\r\n  textColor: \"#DBDBDB\",\r\n  titleColor: \"#f39d3b\",\r\n};\r\n"],"sourceRoot":""}